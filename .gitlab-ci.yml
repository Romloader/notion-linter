image: node

cache:
  paths:
    - node_modules
    - client/node_modules
    - server/node_modules

# Executed in order - subjobs are executed in parallel
stages:
    - init
#    - build
    - lint
#    - test
#    - deploy

dependencies:
    stage: init
    script:
        - echo "Installing dependencies..."
        - npm install
        - cd client && npm install && cd ..
        - cd server && npm install && cd ..
        - echo "Dependencies installed."

# ------------------------------- BUILD -------------------------------

#build:
#    stage: build
#    script:

# ------------------------------- LINT -------------------------------

eslint:
    stage: lint
    script:
        - echo "Linting code..."
        # Install ESLint in this docker container
        - npm install -g eslint
        # Run ESLint
        - eslint .
        # Output ESLint stuff
        - echo "Code linted."

# ------------------------------- TEST -------------------------------

#test:
#    stage: test
#    script:
#        - echo "Running tests..."
#        - |
#            apt update
#            apt install -y libasound2 libgbm1 libgtk-3-0 libnss3 xvfb
#            xvfb-run -a npm run test
#        - echo "Code coverage is 90%"

# ------------------------------- DEPLOY -------------------------------

#deploy:      # This job runs in the deploy stage.
#  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#  environment: production
#  script:
#    - echo "Deploying application..."
#    - echo "Application successfully deployed."
